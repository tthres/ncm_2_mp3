name: Qt 6 Windows CI/CD (Path Fix)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

env:
  BUILD_TYPE: Release
  QT_VERSION: 6.7.2
  ARTIFACT_NAME: ncm2mp3-setup

jobs:
  build-and-release:
    name: Build and Release on Windows
    runs-on: windows-2019
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v2

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: '${{ github.workspace }}/Qt/'
        install-deps: 'true'

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -A x64 -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Package
      working-directory: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
      shell: pwsh
      run: |
        Write-Output "Qt6_DIR: $env:Qt6_DIR"
        
        $windeployqtPath = Get-ChildItem -Path $env:Qt6_DIR -Recurse -Filter "windeployqt.exe" | Select-Object -First 1 -ExpandProperty FullName
        
        if ($windeployqtPath) {
          Write-Output "windeployqt found at: $windeployqtPath"
          & $windeployqtPath . --release --compiler-runtime
          if ($LASTEXITCODE -ne 0) {
            Write-Error "windeployqt failed with exit code $LASTEXITCODE"
            exit 1
          }
        } else {
          Write-Error "windeployqt.exe not found in Qt directory"
          Get-ChildItem -Path $env:Qt6_DIR -Recurse | Where-Object { $_.Name -like "*deploy*" } | ForEach-Object { Write-Output $_.FullName }
          exit 1
        }

    - name: Install NSIS
      uses: joncloud/makensis-action@v3.7

    - name: Create Installer
      run: |
        makensis.exe installer.nsi

    - name: Generate release tag
      id: tag
      run: |
        echo "release_tag=UserBuild_$(date +'%Y.%m.%d_%H-%M')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        release_name: Release ${{ steps.tag.outputs.release_tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ncm2mp3-setup.exe
        asset_name: ncm2mp3-setup.exe
        asset_content_type: application/vnd.microsoft.portable-executable